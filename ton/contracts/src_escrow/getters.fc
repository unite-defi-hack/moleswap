#include "../imports/stdlib.fc";
#include "storage.fc";

(slice, int, int, int, int, slice, slice, int, int, int, int, slice) get_escrow_data() method_id {
    load_data();

    return (
        storage::lop_address,
        storage::order_hash,
        storage::hashlock,
        storage::creation_time,
        storage::expiration_time,
        storage::maker_addr,
        storage::maker_asset_addr,
        storage::maker_asset_amount,
        storage::receiver_addr,
        storage::taker_asset_addr,
        storage::taker_asset_amount,
        storage::asset_jetton_address
    );
}

(int, int, int, int, int, slice) get_execution_params() method_id {
    load_data();

    return (
        storage::execution_start_time,
        storage::withdrawal_timelock,
        storage::public_withdrawal_timelock,
        storage::cancellation_timelock,
        storage::public_cancellation_timelock,
        storage::taker_src_addr
    );
}

(int) get_secret_valid(int secret) method_id {
    load_data();

    int h = begin_cell()
        .store_uint(secret, 256)
        .hash_keccak256();
    return h == storage::hashlock;
}

(int) get_hash(int secret) method_id {
    return begin_cell()
        .store_uint(secret, 256)
        .hash_keccak256();
}
